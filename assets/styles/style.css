html,
body {
  margin: 0;
  height: 100%;
}
html {
  word-spacing: 1px;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  box-sizing: border-box;
  overflow-y: scroll;
  font-size: 62.5%;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}
*,
*:before,
*:after {
  box-sizing: border-box;
  margin: 0;
}
a,
abbr,
acronym,
address,
applet,
article,
aside,
audio,
big,
blockquote,
body,
canvas,
caption,
cite,
code,
dd,
del,
details,
dfn,
div,
dl,
dt,
em,
embed,
fieldset,
figcaption,
figure,
footer,
form,
h1,
h2,
h3,
h4,
h5,
h6,
header,
hgroup,
html,
iframe,
img,
ins,
kbd,
label,
legend,
li,
mark,
menu,
nav,
object,
ol,
output,
p,
pre,
q,
ruby,
s,
samp,
section,
small,
span,
strike,
strong,
sub,
summary,
sup,
table,
tbody,
td,
tfoot,
th,
thead,
time,
tr,
tt,
ul,
var,
video {
  margin: 0;
  padding: 0;
  border: 0;
  vertical-align: baseline;
}
body {
  font-size: 1.6rem;
  letter-spacing: 0;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  background: #f1f1f1;
  color: #010101;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell, Open Sans, Helvetica Neue, Arial, sans-serif;
}
blockquote,
dl,
ol,
p,
ul {
  margin: 0 0 1.5em;
}
code {
  background: #e4e4e4;
  padding: 0 4px;
  border-radius: 4px;
}
.article {
  font-size: 2rem;
}
.article__content {
  position: relative;
  margin: 0 auto;
  padding: 0 12px 6vw;
  min-height: 230px;
  line-height: 1.6em;
}
.article__content h1 {
  margin: 0 0 0.5em;
  font-size: 5.5rem;
  font-weight: 600;
}
.article__content h2 {
  margin: 0.5em 0 0.4em;
  font-size: 3.2rem;
  line-height: 1.25em;
  font-weight: 600;
}
.article__content h3 {
  margin: 0.5em 0 0.2em;
  font-size: 2.5rem;
  line-height: 1.3em;
  font-weight: 600;
}
.article__content h4 {
  margin: 0.5em 0 0.2em;
  font-size: 2.5rem;
  font-weight: 600;
}
.article__content h5 {
  display: block;
  margin: 0.5em 0;
  padding: 0.4em 1em 0.9em;
  border: 0;
  color: #3eb0ef;
  font-family: Georgia, serif;
  font-size: 3.2rem;
  line-height: 1.35em;
  text-align: center;
}
.article__content h6 {
  margin: 0.5em 0 0.2em;
  font-size: 2rem;
  font-weight: 700;
}
.article__date-updated {
  display: none;
}
.article__posted-on,
.article__categories,
.article__tags {
  margin: 0 0 12px 0;
}
.article__addition {
  text-align: center;
  font-size: 1.2rem;
  padding: 0 12px;
}
.author {
  display: flex;
  align-items: center;
  justify-content: center;
}
.author .avatar {
  width: 40px;
  height: 40px;
  margin: 0 12px 0 0;
}
.author__url {
  text-decoration: none;
}
.screen-reader-text {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}
.page {
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: stretch;
}
@media only screen and (min-width: 601px) {
  .page {
    flex-direction: column;
    align-items: center;
  }
}
.page__box {
  display: flex;
}
.page__container {
  padding: 0 16px;
  margin: 0 auto;
  width: 100vw;
  box-sizing: border-box;
  justify-content: center;
  align-items: center;
  display: flex;
}
.page__block {
  min-width: 100%;
}
@media only screen and (min-width: 1281px) {
  .page__block {
    width: 960px;
  }
}
.page__block_double {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
@media only screen and (min-width: 601px) {
  .page__block_double {
    flex-direction: row;
  }
}
.page__one,
.page__two {
  flex-basis: 50%;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 16px 0;
}
.page__container {
  max-width: 400px;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLnN0eWwiLCJtaXhpbnMuc3R5bCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtBQUFNO0VBQ0osUUFBTyxFQUFQO0VBQ0EsUUFBTyxLQUFQOztBQUVGO0VBQ0UsY0FBYyxJQUFkO0VBQ0Esc0JBQXNCLEtBQXRCO0VBQ0EsMEJBQTBCLEtBQTFCO0VBQ0EseUJBQXlCLFVBQXpCO0VBQ0Esd0JBQXdCLFlBQXhCO0VBQ0EsWUFBWSxXQUFaO0VBQ0EsWUFBWSxPQUFaO0VBQ0EsV0FBVyxNQUFYO0VBQ0EsNkJBQTZCLGNBQTdCOztBQUdGO0FBQ0E7QUFDQTtFQUNFLFlBQVksV0FBWjtFQUNBLFFBQVEsRUFBUjs7QUFHRjtBQUFHO0FBQU07QUFBUztBQUFTO0FBQVE7QUFBUztBQUFPO0FBQU87QUFBSztBQUFZO0FBQU07QUFBUTtBQUFTO0FBQU07QUFBTTtBQUFJO0FBQUs7QUFBUztBQUFLO0FBQUs7QUFBSTtBQUFJO0FBQUk7QUFBTztBQUFVO0FBQVk7QUFBUTtBQUFRO0FBQU07QUFBSTtBQUFJO0FBQUk7QUFBSTtBQUFJO0FBQUk7QUFBUTtBQUFRO0FBQU07QUFBUTtBQUFLO0FBQUs7QUFBSztBQUFPO0FBQVE7QUFBSTtBQUFNO0FBQU07QUFBSztBQUFRO0FBQUk7QUFBUTtBQUFHO0FBQUs7QUFBRztBQUFNO0FBQUc7QUFBTTtBQUFTO0FBQU87QUFBTTtBQUFRO0FBQVE7QUFBSztBQUFTO0FBQUs7QUFBTztBQUFPO0FBQUk7QUFBTztBQUFJO0FBQU87QUFBTTtBQUFJO0FBQUk7QUFBSTtBQUFLO0VBQ2xkLFFBQVEsRUFBUjtFQUNBLFNBQVMsRUFBVDtFQUNBLFFBQVEsRUFBUjtFQUNBLGdCQUFnQixTQUFoQjs7QUFHRjtFQUNFLFdBQVcsT0FBWDtFQUNBLGdCQUFnQixFQUFoQjtFQUNBLGdCQUFnQixtQkFBaEI7RUFDQSx3QkFBd0IsWUFBeEI7RUFDQSxZQUFXLFFBQVg7RUFDQSxPQUFNLFFBQU47RUFDQSxhQUFhLDZIQUFiOztBQUVGO0FBQVk7QUFBSTtBQUFJO0FBQUc7RUFDckIsUUFBUSxVQUFSOztBQUdGO0VBQ0UsWUFBWSxRQUFaO0VBQ0EsU0FBUyxNQUFUO0VBQ0EsZUFBZSxJQUFmOztBQUVGO0VBQ0UsV0FBVyxLQUFYOztBQUVBO0VBQ0UsVUFBVSxTQUFWO0VBQ0EsUUFBUSxPQUFSO0VBQ0EsU0FBUyxXQUFUO0VBQ0EsWUFBWSxNQUFaO0VBQ0EsYUFBYSxNQUFiOztBQUVBO0VBQ0UsUUFBUSxVQUFSO0VBQ0EsV0FBVyxPQUFYO0VBQ0EsYUFBYSxJQUFiOztBQUdGO0VBQ0UsUUFBUSxjQUFSO0VBQ0EsV0FBVyxPQUFYO0VBQ0EsYUFBYSxPQUFiO0VBQ0EsYUFBYSxJQUFiOztBQUdGO0VBQ0UsUUFBUSxjQUFSO0VBQ0EsV0FBVyxPQUFYO0VBQ0EsYUFBYSxNQUFiO0VBQ0EsYUFBYSxJQUFiOztBQUdGO0VBQ0UsUUFBUSxjQUFSO0VBQ0EsV0FBVyxPQUFYO0VBQ0EsYUFBYSxJQUFiOztBQUdGO0VBQ0UsU0FBUyxNQUFUO0VBQ0EsUUFBUSxRQUFSO0VBQ0EsU0FBUyxnQkFBVDtFQUNBLFFBQVEsRUFBUjtFQUNBLE9BQU8sUUFBUDtFQUNBLGFBQW9CLGVBQXBCO0VBQ0EsV0FBVyxPQUFYO0VBQ0EsYUFBYSxPQUFiO0VBQ0EsWUFBWSxPQUFaOztBQUdGO0VBQ0UsUUFBUSxjQUFSO0VBQ0EsV0FBVyxLQUFYO0VBQ0EsYUFBYSxJQUFiOztBQUtGO0VBQ0UsU0FBUSxLQUFSOztBQUVKO0FBQWM7QUFBZTtFQUMzQixRQUFPLFdBQVA7O0FBRUY7RUFDRSxZQUFXLE9BQVg7RUFDQSxXQUFVLE9BQVY7RUFDQSxTQUFRLE9BQVI7O0FBR0o7RUFDRSxTQUFRLEtBQVI7RUFDQSxhQUFZLE9BQVo7RUFDQSxpQkFBaUIsT0FBakI7O0FBRUE7RUFDRSxPQUFNLEtBQU47RUFDQSxRQUFPLEtBQVA7RUFDQSxRQUFPLFdBQVA7O0FBRUY7RUFDRSxpQkFBZ0IsS0FBaEI7O0FBRUo7RUNuSUUsVUFBUyxTQUFUO0VBQ0EsT0FBTSxJQUFOO0VBQ0EsUUFBTyxJQUFQO0VBQ0EsU0FBUSxFQUFSO0VBQ0EsUUFBTyxLQUFQO0VBQ0EsVUFBUyxPQUFUO0VBQ0EsTUFBSyxpQkFBTDtFQUNBLFFBQU8sRUFBUDs7QUQrSEY7RUM3R0UsT0FBTSxLQUFOO0VBQ0EsU0FBUSxLQUFSO0VBQ0EsaUJBQWdCLE9BQWhCO0VBQ0EsYUFBWSxRQUFaOztBQUNPO0FBQUE7SUFDTCxnQkFBZSxPQUFmO0lBQ0EsYUFBWSxPQUFaOzs7QUFFRjtFQUNFLFNBQVEsS0FBUjs7QUFFRjtFQUNFLFNBQVEsT0FBUjtFQUNBLFFBQVEsT0FBUjtFQUNBLE9BQU8sTUFBUDtFQUNBLFlBQVcsV0FBWDtFQUNBLGlCQUFpQixPQUFqQjtFQUNBLGFBQWEsT0FBYjtFQUNBLFNBQVMsS0FBVDs7QUFFRjtFQUNFLFdBQVUsS0FBVjs7QUFHTztBQUFBO0lBQ0wsT0FBTSxNQUFOOzs7QUFFRjtFQW5DRixTQUFRLEtBQVI7RUFDQSxnQkFBZSxPQUFmO0VBQ0EsaUJBQWdCLGNBQWhCOztBQUNPO0FBQUE7SUFDTCxnQkFBZSxJQUFmOzs7QUFrQ0Y7QUFBUTtFQUNOLFlBQVcsSUFBWDtFQUNBLFlBQVcsV0FBWDtFQUNBLFNBQVEsS0FBUjtFQUNBLGdCQUFlLE9BQWY7RUFDQSxpQkFBZ0IsT0FBaEI7RUFDQSxhQUFZLE9BQVo7RUFDQSxTQUFrQixPQUFsQjs7QUQyRUY7RUFDRSxXQUFVLE1BQVYiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcImNvbnN0YW50cy5zdHlsXCJcbkBpbXBvcnQgXCJtaXhpbnMuc3R5bFwiXG5cbmh0bWwsIGJvZHlcbiAgbWFyZ2luIDBcbiAgaGVpZ2h0IDEwMCVcblxuaHRtbCB7XG4gIHdvcmQtc3BhY2luZzogMXB4O1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xuICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICBmb250LXNpemU6IDYyLjUlO1xuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMCk7XG59XG5cbiosXG4qOmJlZm9yZSxcbio6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBtYXJnaW46IDA7XG59XG5cbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGFwcGxldCwgYXJ0aWNsZSwgYXNpZGUsIGF1ZGlvLCBiaWcsIGJsb2NrcXVvdGUsIGJvZHksIGNhbnZhcywgY2FwdGlvbiwgY2l0ZSwgY29kZSwgZGQsIGRlbCwgZGV0YWlscywgZGZuLCBkaXYsIGRsLCBkdCwgZW0sIGVtYmVkLCBmaWVsZHNldCwgZmlnY2FwdGlvbiwgZmlndXJlLCBmb290ZXIsIGZvcm0sIGgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIGhlYWRlciwgaGdyb3VwLCBodG1sLCBpZnJhbWUsIGltZywgaW5zLCBrYmQsIGxhYmVsLCBsZWdlbmQsIGxpLCBtYXJrLCBtZW51LCBuYXYsIG9iamVjdCwgb2wsIG91dHB1dCwgcCwgcHJlLCBxLCBydWJ5LCBzLCBzYW1wLCBzZWN0aW9uLCBzbWFsbCwgc3Bhbiwgc3RyaWtlLCBzdHJvbmcsIHN1Yiwgc3VtbWFyeSwgc3VwLCB0YWJsZSwgdGJvZHksIHRkLCB0Zm9vdCwgdGgsIHRoZWFkLCB0aW1lLCB0ciwgdHQsIHVsLCB2YXIsIHZpZGVvXG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG5cblxuYm9keVxuICBmb250LXNpemU6IDEuNnJlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDA7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICBiYWNrZ3JvdW5kICNmMWYxZjFcbiAgY29sb3IgY29sb3JfX3RleHRcbiAgZm9udC1mYW1pbHk6IGZvbnRfX2ZhbWFseTtcblxuYmxvY2txdW90ZSwgZGwsIG9sLCBwLCB1bCB7XG4gIG1hcmdpbjogMCAwIDEuNWVtO1xufVxuXG5jb2RlXG4gIGJhY2tncm91bmQ6IGNvbG9yX19jb2RlXG4gIHBhZGRpbmc6IDAgZ3V0dGVyXG4gIGJvcmRlci1yYWRpdXM6IGd1dHRlclxuXG4uYXJ0aWNsZVxuICBmb250LXNpemU6IDJyZW07XG5cbiAgJl9fY29udGVudFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwYWRkaW5nOiAwIDMgKiBndXR0ZXIgNnZ3O1xuICAgIG1pbi1oZWlnaHQ6IDIzMHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjZlbTtcblxuICAgIGgxIHtcbiAgICAgIG1hcmdpbjogMCAwIC41ZW07XG4gICAgICBmb250LXNpemU6IDUuNXJlbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgfVxuXG4gICAgaDIge1xuICAgICAgbWFyZ2luOiAuNWVtIDAgLjRlbTtcbiAgICAgIGZvbnQtc2l6ZTogMy4ycmVtO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuMjVlbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgfVxuXG4gICAgaDMge1xuICAgICAgbWFyZ2luOiAuNWVtIDAgLjJlbTtcbiAgICAgIGZvbnQtc2l6ZTogMi41cmVtO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuM2VtO1xuICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICB9XG5cbiAgICBoNCB7XG4gICAgICBtYXJnaW46IC41ZW0gMCAuMmVtO1xuICAgICAgZm9udC1zaXplOiAyLjVyZW07XG4gICAgICBmb250LXdlaWdodDogNjAwO1xuICAgIH1cblxuICAgIGg1IHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgbWFyZ2luOiAuNWVtIDA7XG4gICAgICBwYWRkaW5nOiAuNGVtIDFlbSAuOWVtO1xuICAgICAgYm9yZGVyOiAwO1xuICAgICAgY29sb3I6ICMzZWIwZWY7XG4gICAgICBmb250LWZhbWlseTogR2VvcmdpYSwgc2VyaWY7XG4gICAgICBmb250LXNpemU6IDMuMnJlbTtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjM1ZW07XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuXG4gICAgaDYge1xuICAgICAgbWFyZ2luOiAuNWVtIDAgLjJlbTtcbiAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XG4gICAgfVxuXG5cbiAgJl9fZGF0ZVxuICAgICYtdXBkYXRlZFxuICAgICAgZGlzcGxheSBub25lXG5cbiAgJl9fcG9zdGVkLW9uLCAmX19jYXRlZ29yaWVzLCAmX190YWdzXG4gICAgbWFyZ2luIDAgMCAzICogZ3V0dGVyIDBcblxuICAmX19hZGRpdGlvblxuICAgIHRleHQtYWxpZ24gY2VudGVyXG4gICAgZm9udC1zaXplIDEuMnJlbVxuICAgIHBhZGRpbmcgMCAzICogZ3V0dGVyXG5cblxuLmF1dGhvclxuICBkaXNwbGF5IGZsZXhcbiAgYWxpZ24taXRlbXMgY2VudGVyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gIC5hdmF0YXJcbiAgICB3aWR0aCA0MHB4XG4gICAgaGVpZ2h0IDQwcHhcbiAgICBtYXJnaW4gMCAzICogZ3V0dGVyIDAgMFxuXG4gICZfX3VybFxuICAgIHRleHQtZGVjb3JhdGlvbiBub25lXG5cbi5zY3JlZW4tcmVhZGVyLXRleHRcbiAgc3Itb25seSgpXG5cbi5wYWdlXG4gIHNlY3Rpb24oKVxuXG4gICZfX2NvbnRhaW5lclxuICAgIG1heC13aWR0aCA0MDBweFxuXG5cblxuIiwic3Itb25seSgpXG4gIHBvc2l0aW9uIGFic29sdXRlXG4gIHdpZHRoIDFweFxuICBoZWlnaHQgMXB4XG4gIHBhZGRpbmcgMFxuICBtYXJnaW4gLTFweFxuICBvdmVyZmxvdyBoaWRkZW5cbiAgY2xpcCByZWN0KDAsIDAsIDAsIDApXG4gIGJvcmRlciAwXG5cbm5vLXNlbGVjdCgpXG4gIC13ZWJraXQtdXNlci1zZWxlY3Qgbm9uZVxuICAtbW96LXVzZXItc2VsZWN0IG5vbmVcbiAgLW1zLXVzZXItc2VsZWN0IG5vbmVcbiAgdXNlci1zZWxlY3Qgbm9uZVxuXG5cbmRvdWJsZSgpXG4gIGRpc3BsYXkgZmxleFxuICBmbGV4LWRpcmVjdGlvbiBjb2x1bW5cbiAganVzdGlmeS1jb250ZW50IHNwYWNlLWJldHdlZW5cbiAgQG1lZGlhIHRhYmxldFxuICAgIGZsZXgtZGlyZWN0aW9uIHJvd1xuXG5cbnNlY3Rpb24oKVxuICB3aWR0aCAxMDAlXG4gIGRpc3BsYXkgZmxleFxuICBqdXN0aWZ5LWNvbnRlbnQgY2VudGVyXG4gIGFsaWduLWl0ZW1zIHN0cmV0Y2hcbiAgQG1lZGlhIHRhYmxldFxuICAgIGZsZXgtZGlyZWN0aW9uIGNvbHVtblxuICAgIGFsaWduLWl0ZW1zIGNlbnRlclxuXG4gICZfX2JveFxuICAgIGRpc3BsYXkgZmxleFxuXG4gICZfX2NvbnRhaW5lclxuICAgIHBhZGRpbmcgMCA0ICogZ3V0dGVyXG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6IDEwMHZ3O1xuICAgIGJveC1zaXppbmcgYm9yZGVyLWJveFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZGlzcGxheTogZmxleDtcblxuICAmX19ibG9ja1xuICAgIG1pbi13aWR0aCAxMDAlXG5cblxuICAgIEBtZWRpYSBkZXNrdG9wXG4gICAgICB3aWR0aCB3aWR0aF9fbWRcblxuICAgICZfZG91YmxlXG4gICAgICBkb3VibGUoKVxuXG4gICZfX29uZSwgJl9fdHdvXG4gICAgZmxleC1iYXNpcyA1MCVcbiAgICBib3gtc2l6aW5nIGJvcmRlci1ib3hcbiAgICBkaXNwbGF5IGZsZXhcbiAgICBmbGV4LWRpcmVjdGlvbiBjb2x1bW5cbiAgICBqdXN0aWZ5LWNvbnRlbnQgY2VudGVyXG4gICAgYWxpZ24taXRlbXMgY2VudGVyXG4gICAgcGFkZGluZyA0ICogZ3V0dGVyIDBcblxuXG5pbnB1dCgpXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IGF1dG87XG4gIGZvbnQtc2l6ZTogZm9udC1zaXplX19tZFxuICBjb2xvcjogY29sb3JfX2lucHV0LXRleHRcbiAgYmFja2dyb3VuZC1jb2xvcjogY29sb3JfX2lucHV0LWJnXG4gIGJvcmRlci1yYWRpdXM6IGd1dHRlclxuICBib3JkZXI6IDFweCBzb2xpZCBjb2xvcl9faW5wdXQtYm9yZGVyXG4gIG91dGxpbmUgbm9uZVxuICBwYWRkaW5nOiA0ICogZ3V0dGVyIDUgKiBndXR0ZXJcbiAgbGluZS1oZWlnaHQ6IDFcbiAgZm9udC13ZWlnaHQ6IDMwMFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94XG4gIHRyYW5zaXRpb246IGFsbCAxNTBtcyBlYXNlLWluXG4gIHRleHQtZGVjb3JhdGlvbiBub25lXG4gIGZvbnQtZmFtaWx5OiBmb250X19mYW1hbHlcbiAgbGV0dGVyLXNwYWNpbmcgbm9ybWFsXG4gIHdvcmQtc3BhY2luZyBub3JtYWxcblxuICAmOmZvY3VzLCAmOmhvdmVyLCAmOmFjdGl2ZVxuICAgIGJ3ID0gMnB4XG4gICAgb3V0bGluZSBub25lXG4gICAgcGFkZGluZzogJ2NhbGMoNCAqICVzIC0gJXMgLyAyKScgJSAoZ3V0dGVyIGJ3KSAnY2FsYyg1ICogJXMgLSAlcyAvIDIpJyAlIChndXR0ZXIgYncpXG4gICAgYm9yZGVyIGJ3IHNvbGlkIGNvbG9yX19pbnB1dC1ib3JkZXItYWN0aXZlXG4gICAgdHJhbnNpdGlvbjogYWxsIDE1MG1zIGVhc2Utb3V0XG5cbmJ1dHRvbi1zdGF0ZSh0eXBlKVxuICAvLyBsaXN0IG9mIGJ1dHRvbiB0eXBlc1xuICBwb3N0Zml4ZXMgPSBsaW5rLCBkZWZhdWx0LCBwcmltYXJ5XG4gIGZvciBwb3N0Zml4IGluIHBvc3RmaXhlc1xuICAgIGlmIChwb3N0Zml4ID09IHR5cGUpXG4gICAgICBjb2xvcjogbG9va3VwKCdjb2xvcl9fYnV0dG9uLWNvbG9yXycgKyBwb3N0Zml4KVxuICAgICAgYm9yZGVyLWNvbG9yOiBsb29rdXAoJ2NvbG9yX19idXR0b24tYm9yZGVyXycgKyBwb3N0Zml4KVxuICAgICAgYmFja2dyb3VuZDogbG9va3VwKCdjb2xvcl9fYnV0dG9uLWJnXycgKyBwb3N0Zml4KVxuXG4gICAgICAmOmZvY3VzXG4gICAgICAgIGNvbG9yOiBsb29rdXAoJ2NvbG9yX19idXR0b24tY29sb3JfJyArIHBvc3RmaXggKyAnLWZvY3VzJylcbiAgICAgICAgYm9yZGVyLWNvbG9yOiBsb29rdXAoJ2NvbG9yX19idXR0b24tYm9yZGVyXycgKyBwb3N0Zml4ICsgJy1mb2N1cycpXG4gICAgICAgIGJhY2tncm91bmQ6IGxvb2t1cCgnY29sb3JfX2J1dHRvbi1iZ18nICsgcG9zdGZpeCArICctZm9jdXMnKVxuICAgICAgJjpob3ZlclxuICAgICAgICBjb2xvcjogbG9va3VwKCdjb2xvcl9fYnV0dG9uLWNvbG9yXycgKyBwb3N0Zml4ICsgJy1ob3ZlcicpXG4gICAgICAgIGJvcmRlci1jb2xvcjogbG9va3VwKCdjb2xvcl9fYnV0dG9uLWJvcmRlcl8nICsgcG9zdGZpeCArICctaG92ZXInKVxuICAgICAgICBiYWNrZ3JvdW5kOiBsb29rdXAoJ2NvbG9yX19idXR0b24tYmdfJyArIHBvc3RmaXggKyAnLWhvdmVyJylcbiAgICAgICY6YWN0aXZlXG4gICAgICAgIGNvbG9yOiBsb29rdXAoJ2NvbG9yX19idXR0b24tY29sb3JfJyArIHBvc3RmaXggKyAnLWFjdGl2ZScpXG4gICAgICAgIGJvcmRlci1jb2xvcjogbG9va3VwKCdjb2xvcl9fYnV0dG9uLWJvcmRlcl8nICsgcG9zdGZpeCArICctYWN0aXZlJylcbiAgICAgICAgYmFja2dyb3VuZDogbG9va3VwKCdjb2xvcl9fYnV0dG9uLWJnXycgKyBwb3N0Zml4ICsgJy1hY3RpdmUnKVxuXG5cbmJ1dHRvbigpXG4gIGlucHV0KClcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrXG4gIHRleHQtYWxpZ24gY2VudGVyXG4gIHdpZHRoOiBhdXRvXG4gIHBhZGRpbmc6IDQgKiBndXR0ZXIgKyAxcHggNSAqIGd1dHRlclxuICBib3JkZXItd2lkdGggMXB4XG4gIGZvbnQtd2VpZ2h0OiA0MDBcbiAgY3Vyc29yOiBwb2ludGVyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZVxuICAmOmZvY3VzLCAmOmhvdmVyLCAmOmFjdGl2ZVxuICAgIHBhZGRpbmc6IDQgKiBndXR0ZXIgKyAxcHggNSAqIGd1dHRlclxuICAgIGJvcmRlci13aWR0aCAxcHhcbiAgJl9kZWZhdWx0XG4gICAgYnV0dG9uLXN0YXRlKGRlZmF1bHQpXG4gICZfcHJpbWFyeVxuICAgIGJ1dHRvbi1zdGF0ZShwcmltYXJ5KVxuXG5cbmZvcm0oKVxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBtYXJnaW4gMCAtKGd1dHRlcilcblxuICAmX19pdGVtXG4gICAgbWFyZ2luIDAgZ3V0dGVyIDIgKiBndXR0ZXIgZ3V0dGVyXG5cbiAgJl9pbmxpbmVcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuXG5cbmdyaWQoKVxuICBkaXNwbGF5IGJsb2NrXG4gIGJveC1zaXppbmcgYm9yZGVyLWJveFxuXG4gICZfY29udGFpbmVyXG4gICAgbWluLXdpZHRoOiAxMDAlXG4gICAgZGlzcGxheSBmbGV4XG4gICAgZmxleC1kaXJlY3Rpb24gcm93XG4gICAgZmxleC13cmFwOiB3cmFwXG4gICAganVzdGlmeS1jb250ZW50IHNwYWNlLWJldHdlZW5cbiAgICBtYXJnaW4gMCAtNCAqIGd1dHRlclxuXG4gICAgLy8gc2V0IG9ubHkgb25lIGNvbHVtbiBmb3Igc3VwZXIgc21hbGwgc2NyZWVuc1xuICAgIEBtZWRpYSBtaW5pXG4gICAgICBmbGV4LWRpcmVjdGlvbiBjb2x1bW5cblxuICAvLyBsb29wIGZvciBkZXZpY2VzXG4gIGZvciBkZXZpY2UsIGogaW4gZGV2aWNlc1xuICAgIC8vIG1lZGlhIHF1ZXJ5IGZvciBkZXZpY2VcbiAgICBAbWVkaWEgZGV2aWNlXG4gICAgICAvLyBzZXQgZGV2aWNlIGVxdWFsIHNpemVcbiAgICAgICZfe3NpemVzW2pdfVxuICAgICAgICBmb3IgaSBpbiAxLi4xMlxuICAgICAgICAgICYte2l9XG4gICAgICAgICAgICB3aWR0aCAoaSAqIDEwMCUgLyAxMilcblxuICAmX2l0ZW1cbiAgICAvLyBzZXQgb25seSBvbmUgY29sdW1uIGZvciBzdXBlciBzbWFsbCBzY3JlZW5zXG4gICAgQG1lZGlhIG1pbmlcbiAgICAgIHdpZHRoIDEwMCVcblxuaWNvbigpXG4gIGRpc3BsYXkgZmxleFxuICAvL2ZsZXgtd3JhcDogd3JhcFxuICBtYXJnaW4gYXV0b1xuXG4gICZfdG9wLCAmX2JvdHRvbVxuICAgIGFsaWduLWl0ZW1zIGZsZXgtc3RhcnRcbiAgICBmbGV4LWRpcmVjdGlvbiBjb2x1bW5cblxuICAgICYtY2VudGVyXG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyXG5cbiAgJl9ib3R0b21cbiAgICBmbGV4LWRpcmVjdGlvbiBjb2x1bW4tcmV2ZXJzZVxuXG5cbiAgJl9sZWZ0LCAmX3JpZ2h0XG4gICAgYWxpZ24taXRlbXMgZmxleC1zdGFydFxuICAgIGZsZXgtZGlyZWN0aW9uIHJvd1xuXG4gICAgJi1jZW50ZXJcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXJcblxuICAmX3JpZ2h0XG4gICAgZmxleC1kaXJlY3Rpb24gcm93LXJldmVyc2VcblxuICAmX19pbWFnZVxuICAgIG1hcmdpbiAwXG5cbiAgJl9fY29udGVudFxuICAgICZfdG9wXG4gICAgICBtYXJnaW4gNCAqIGd1dHRlciAwIDAgMFxuXG4gICAgJl9yaWdodFxuICAgICAgbWFyZ2luIDAgNCAqIGd1dHRlciAwIDBcblxuICAgICZfYm90dG9tXG4gICAgICBtYXJnaW4gMCAwIDQgKiBndXR0ZXIgMFxuXG4gICAgJl9sZWZ0XG4gICAgICBtYXJnaW4gMCAwIDAgNCAqIGd1dHRlclxuXG4gICAgJl9lbmRcbiAgICAgIHRleHQtYWxpZ24gcmlnaHRcblxuICAmX2FsaWduXG4gICAgJi1sZWZ0XG4gICAgICB0ZXh0LWFsaWduIGxlZnRcblxuICAgICYtY2VudGVyXG4gICAgICB0ZXh0LWFsaWduIGNlbnRlclxuXG4gICAgJi1yaWdodFxuICAgICAgdGV4dC1hbGlnbiByaWdodFxuXG4gICAgJi1qdXN0aWZ5XG4gICAgICB0ZXh0LWFsaWduIGp1c3RpZnlcblxuICAmX3Bvc2l0aW9uXG4gICAgJi1zdGFydFxuICAgICAgYWxpZ24taXRlbXMgZmxleC1zdGFydFxuXG4gICAgJi1jZW50ZXJcbiAgICAgIGFsaWduLWl0ZW1zIGNlbnRlclxuXG4gICAgJi1lbmRcbiAgICAgIGFsaWduLWl0ZW1zIGZsZXgtZW5kXG5cbiAgJl9faWNvXG4gICAgZGlzcGxheSBibG9ja1xuICAgIGJhY2tncm91bmQgI2NjY1xuIl19 */
